//---------------------------------------------------------------------------------------------------
// Kharkov
// Lednoe
//---------------------------------------------------------------------------------------------------
// Errors list
//#define  cont_no_error 						0x0000
//#define  cont_bad_thermo_sensor		0x0100
//#define  cont_freezing_channel		0x0200
//#define  cont_freezing_external		0x0300
//#define  cont_low_temperature			0x0400
//#define  cont_high_temperature		0x0500
//#define  cont_bad_fan_in					0x0600
//#define  cont_bad_filter					0x0700
//#define  cont_bad_220							0x0800
//#define  cont_bad_fan_out					0x0900
//---------------------------------------------------------------------------------------------------
// Interrupt table
goto automat_mode;
goto stop_mode;
goto manual_mode;
goto error_mode;
goto custom_mode;
end;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
custom_mode:
mode=4;
end;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
error_mode:
mode=3;
end;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
manual_mode:
mode=2;
end;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
stop_mode:
//mode=1;
goto automat_mode;
end;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
check_sensor_0:
pass_if_false reg[0];       // No errors
ret;
reg[10]=ai[0]>900;
pass_if_true reg[10];
ret;
error=0x0101;
reg[0]=1;
ret;
//---------------------------------------------------------------------------------------------------
check_sensor_1:
pass_if_false reg[0];       // No errors
ret;
reg[10]=ai[1]>900;
pass_if_true reg[10];
ret;
error=0x0102;
reg[0]=1;
ret;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
handle_fan:
reg[10]=out_param[19]==0;
pass_if_false reg[10];
goto speed_0;

reg[10]=out_param[19]==1;
pass_if_false reg[10];
goto speed_1;

reg[10]=out_param[19]==2;
pass_if_false reg[10];
goto speed_2;

reg[10]=out_param[19]==3;
pass_if_false reg[10];
goto speed_3;
ret;

speed_0:
do[2]=0;
do[3]=0;
do[4]=0;
ao[0]=0;
ret;
speed_1:
do[2]=1;
do[3]=0;
do[4]=0;
ao[0]=300;
ret;
speed_2:
do[2]=0;
do[3]=1;
do[4]=0;
ao[0]=600;
ret;
speed_3:
do[2]=0;
do[3]=0;
do[4]=1;
ao[0]=900;
ret;
//---------------------------------------------------------------------------------------------------
pritok_0_start:
// Check errors
call check_sensor_0;
call check_sensor_1;

pass_if_false in_param[1];
//goto speed_1;
//goto speed_2;
call handle_fan;
ret;
//---------------------------------------------------------------------------------------------------
pritok_0_stop:
ret;
//---------------------------------------------------------------------------------------------------
pritok_0_brakedown:
ret; 
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Main program for handling any equipment
automat_mode:
mode=0;
beep=100;
// Pid cofficients init
//pid.enable[0]=0;
pid.channel[0]=1;
//pid.t0[0]=220;
//pid.p[0]=200;
//pid.i[0]=200;
pid.d[0]=350;
//pid.ti[0]=60;
//pid.pow_min[0]=200;
//pid.pow_max[0]=1000;
pid.slow[0]=50;
pid.fast[0]=200;
pid.t3max[0]=110;
pid.power[0]=999;
pid.p3[0]=0;

//pid.enable[1]=0;
pid.channel[1]=1;
pid.t0[1]=500;
//pid.p[0]=200;
//pid.i[0]=200;
//pid.d[0]=1000;
//pid.ti[0]=60;
//pid.pow_min[0]=200;
//pid.pow_max[0]=1000;
pid.t3max[1]=35;
pid.power[1]=999;
pid.p3[1]=0;


reg[0]=0;  // Sign of present brakedown, can be reset reset only in STOP mode
reg[1]=0;  // Heating/Cooling
reg[2]=0;  // Temperature difference
reg[3]=0;  // 
reg[4]=0;  // 
reg[5]=0;  // 
reg[9]=0;  
reg[11]=0; 
reg[12]=0; 

ao[0]=0;
//ao[1]=0;

do[0]=0;
do[1]=0;
do[2]=0;
do[3]=0;
do[4]=0;
do[5]=0;
do[6]=0;

timer[0]=180;
timer[1]=86400;
timer[2]=0;			// Filter contact jitter
timer[3]=210;			// Fan sensors timeout 20s
//*****************************************************************************
// Main loop
//*****************************************************************************
main_loop:

do[5]=pid.open[0];
do[6]=pid.close[0];

call pritok_0_start; 

goto main_loop;
//*****************************************************************************
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Routines
Delay_ms:
pass_if_false timer[0];
goto Delay_ms;
ret;
//---------------------------------------------------------------------------------------------------
Service_Open_0:
timer[1]=155;
Service_Open_0_loop:
pid.power[0]=999;
pid.power[1]=999;
do[5]=pid.open[0];
do[6]=pid.close[0];
pass_if_false timer[1];
goto Service_Open_0_loop;
timer[1]=86400;
ret;
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
