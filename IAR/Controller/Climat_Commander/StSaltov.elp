 /*=========================================================
Секция подключения внешних файлов.
 Поддерживается только один уровень вложенности, 
 include в include запрещена
=========================================================*/
#include "define.h"
 /*=========================================================
Реализована директива #define 
=========================================================*/
 #define IO_PORT do[3]
 /*=========================================================
Обьявления переменных
Переменные могут быть 1, 2, 4х байтными знаковыми и беззнаковыми
signed/unsigned  char
signed/unsigned  short
signed/unsigned  long
Переменные с плавающей точкой не реализованы в данной версии компилятора
Возможна первичная инициализвация переменных
Синтаксис обьявления переменных
<char><name><;>"	 				
<char><name><=><value><;>" 				
<unsigned><char><name><;>" 				
<unsigned><char><name><=><value><;>" 	
Массивы переменных не реализованы.
=========================================================*/
 unsigned short i=0;
 short j=55;
 unsigned char  a;
 unsigned char  b=45;
 /*=========================================================
Выполнение программы начинается с первой инструкции кода
Первой инструкцией должен быть переход на главную функцию 
программы, или начало самой программы
Опрерандами могут выступать

- Порты ввода вывода
    Цифровые входы DI[0].. DI[10] (только для чтения)
    Цифровые выходы DO[0].. DO[10] чтение/запись)
    Аналоговые входы АI[0].. АI[7] (только для чтения)
    Аналоговые выходы АO[0].. АO[5] чтение/запись)
    (Количество реальных портов зависит от модели контроллера)

- Обьяевленные ранее переменные

- Внутренние регистры контроллера, такие как таймеры, 
      регистры модуля PID, FAN...


=========================================================*/
 //---------------------------------------------------------------------------------------------------
goto main;
 //---------------------------------------------------------------------------------------------------
 check_freeze_0:
 do[0]=1;
 ao[0]=0;
  i=i+5;
  i[3]=3;
 ret;
 //---------------------------------------------------------------------------------------------------
 main:
  do[1]=1;
  ao[3]=1000;
  i=i+1;
  IO_PORT=1;
//  i=i+5;
//  j=i>3;
  do[2] = do[2] ^ di[2];
//  i[3]=3;
  ao[1]=ai[1];
//  call check_freeze_0;
  if(ai[0]>0) call check_freeze_0;
  if(IO_PORT) call check_freeze_0;
  i=5;
goto main;
 main_loop:
// call check_freeze_0;
 
 goto main_loop;
 //---------------------------------------------------------------------------------------------------
